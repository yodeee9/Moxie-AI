AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  ai-apartment-concierge

  Sample SAM Template for ai-apartment-concierge

Parameters:
  AgentId:
    Type: String
    Description: The agent ID for Bedrock
  AgentAliasId:
    Type: String
    Description: The agent alias ID for Bedrock

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:
  BedrockFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BedrockAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: "arn:aws:s3:::your-bucket-name/*"

  BedrockFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: bedrock/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role: !GetAtt BedrockFunctionRole.Arn
      Environment:
        Variables:
          AGENT_ID: !Ref AgentId
          AGENT_ALIAS_ID: !Ref AgentAliasId
      Events:
        Bedrock:
          Type: Api
          Properties:
            Path: /bedrock
            Method: post

  ZillowFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: zillow/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Role: !GetAtt BedrockFunctionRole.Arn
      Environment:
        Variables:
          AGENT_ID: !Ref AgentId
          AGENT_ALIAS_ID: !Ref AgentAliasId
      Events:
        Zillow:
          Type: Api
          Properties:
            Path: /zillow
            Method: get

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: "true"

Outputs:
  BedrockApi:
    Description: API Gateway endpoint URL for Prod stage for Bedrock function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/bedrock/"
  BedrockFunction:
    Description: Bedrock Lambda Function ARN
    Value: !GetAtt BedrockFunction.Arn
  BedrockIamRole:
    Description: IAM Role created for Bedrock function
    Value: !GetAtt BedrockFunctionRole.Arn
